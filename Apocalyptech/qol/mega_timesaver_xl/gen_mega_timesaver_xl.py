#!/usr/bin/env python3
# vim: set expandtab tabstop=4 shiftwidth=4:

# Copyright 2021-2022 Christopher J. Kucera
# <cj@apocalyptech.com>
# <http://apocalyptech.com/contact.php>
#
# This Wonderlands Hotfix Mod is free software: you can redistribute it
# and/or modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation, either version 3 of
# the License, or (at your option) any later version.
#
# This Wonderlands Hotfix Mod is distributed in the hope that it will
# be useful, but WITHOUT ANY WARRANTY; without even the implied
# warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
# See the GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this Wonderlands Hotfix Mod.  If not, see
# <https://www.gnu.org/licenses/>.

import sys
import argparse
sys.path.append('../../../python_mod_helpers')
from wldata.wldata import WLData
from wlhotfixmod.wlhotfixmod import Mod, BVC

parser = argparse.ArgumentParser(
        description='Generates Mega TimeSaver XL',
        )
parser.add_argument('-v', '--verbose',
        action='store_true',
        help='Be verbose about what we\'re processing',
        )
args = parser.parse_args()
verbose = args.verbose

mod = Mod('mega_timesaver_xl.wlhotfix',
        'Mega TimeSaver XL',
        'Apocalyptech',
        [
            "Speeds up animations throughout the game.",
            "",
            "THIS IS A WORK IN PROGRESS!  Please report any game-breaking bugs",
            "to me, but some animations are bound to remain at their original",
            "speed.",
        ],
        contact='https://apocalyptech.com/contact.php',
        lic=Mod.CC_BY_SA_40,
        v='0.9.0',
        cats='qol',
        )

# AnimSequence objects have two attributes of note:
#  1) SequenceLength - total amount of time the sequence is supposed to take.  It
#     looks like just shortening this value works great, but JWP can't currently
#     serialize AnimSequence objects, so we can't automatically pull current values
#     from data.  (FModel *can* serialize them, but we can't automate that like we
#     can with JWP.)
#  2) RateScale - almost certainly this is always just `1`, and this can be set to
#     scale things up easily, to.  So that's what we're going to be using, mostly!

# How much to improve speed
global_scale = 5

# Character movement speed
global_char_scale = 1.4

# Vehicle-animation movement speed
global_vehicle_scale = 2

# Eridian tool speedups
global_eridian_scale = 2

# Minimum serialization version to allow.  Stock JWP doesn't serialize CurveFloats
# correctly, so the mod'll be invalid unless using apocalyptech's fork, of at least
# this version.
min_apoc_jwp_version = 19

# Data obj
data = WLData()

mod.header('Item Pickups')

# Defaults:
#  /Game/GameData/GameplayGlobals
#  - MassPickupMaxDelay: 0.075
#  - MassPickupMaxPullAmount: 6
#  - MassPickupMaxTotalDelay: 1.5
#  - MassPickupMinDelay: 0.06
#  - MassPickupRadius: 400
#  /Game/Pickups/_Shared/_Design/AutoLootContainerPickupFlyToSettings
#  - MaxLifetime: 2.5
#  - SpinSpeed: (pitch=0, yaw=200, roll=200)
#  - LinearSpeed: 750
#  - LinearAcceleration: 650

mod.comment('Mass Pickup Delay (honestly not sure if these have much, if any, effect)')
for var, value in [
        ('MassPickupMaxDelay', 0.075/3),
        ('MassPickupMaxTotalDelay', 1.5/3),
        ('MassPickupMinDelay', 0.06/3),
        ]:
    mod.reg_hotfix(Mod.PATCH, '',
            '/Game/GameData/GameplayGlobals',
            var,
            round(value, 6))
mod.newline()

mod.comment('Pickup flight speeds (likewise, I suspect many of these don\'t actually do much)')
mod.comment('The `AutoLootContainer` ones definitely do help, at least.')
for obj_name in [
        'AutoLootContainerPickupFlyToSettings',
        'ContainerEchoLogPickupFlyToSettings',
        'ContainerPickupFlyToSettings',
        'DroppedEchoLogPickupFlyToSettings',
        'DroppedPickupFlyToSettings',
        ]:
    full_obj_name = f'/Game/Pickups/_Shared/_Design/{obj_name}'
    obj_data = data.get_exports(full_obj_name, 'PickupFlyToData')[0]
    if 'LinearSpeed' in obj_data:
        speed = obj_data['LinearSpeed']
    else:
        # This seems to be the default
        speed = 1000
    mod.reg_hotfix(Mod.PATCH, '',
            full_obj_name,
            'LinearSpeed',
            speed*2)
    mod.reg_hotfix(Mod.PATCH, '',
            full_obj_name,
            'LinearAcceleration',
            obj_data['LinearAcceleration']*2)
mod.newline()

# Direct animation speedups
mod.header('Containers: Simple Animation Speedups')

# Initial object list generated by:
#     find $(find . -type d -name Lootables) -name "AS_*.uasset" | sort -i | cut -d. -f2 | grep -vE '(Idle|Flinch|_Closed|_Opened)'
# ... while at the root of a data unpack
for obj_name in [
        '/Game/InteractiveObjects/Lootables/FishingNet/Animation/AS_Open',
        '/Game/InteractiveObjects/Lootables/SingleMushroom/AS_Mush_Open',
        '/Game/InteractiveObjects/Lootables/Wyvern_Pile/_Shared/Animation/AS_Open',
        '/Game/Lootables/Eridian/Chest_Red/Animation/AS_Open',
        '/Game/Lootables/Eridian/Chest_White/Animation/AS_Open',
        '/Game/Lootables/Eridian/Crate_Ammo/Animation/AS_Open',
        '/Game/Lootables/_Global/Chest_Desert_White/Animation/AS_Open',
        '/Game/Lootables/_Global/Chest_Fantasy_Red/Animation/AS_Open',
        '/Game/Lootables/_Global/Chest_Fantasy_White/Animation/AS_Open',
        '/Game/Lootables/_Global/Chest_Gold/Animation/AS_Close',
        '/Game/Lootables/_Global/Chest_Gold/Animation/AS_Open',
        '/Game/Lootables/_Global/Chest_Mushroom_White/Animation/AS_Open',
        '/Game/Lootables/_Global/Chest_Overworld/Animation/AS_Open',
        '/Game/Lootables/_Global/Chest_Sands_Red/Animation/AS_Open',
        '/Game/Lootables/_Global/Chest_Seabed_White/Animation/AS_Open',
        '/Game/Lootables/_Global/Crate_ButtStallion_OfferingBox/Animation/AS_Open',
        '/Game/Lootables/_Global/Crate_Fantasy_Ammo/Animation/AS_Open',
        '/Game/Lootables/_Global/Crate_Sands_Ammo/Animation/AS_Open',
        '/Game/Lootables/_Global/Crate_Seabed_Ammo/Animation/AS_Open',
        '/Game/Lootables/Industrial/Lock_Box/Animations/AS_Open',
        '/Game/Lootables/Industrial/Safe/Animation/AS_Open',
        '/Game/Lootables/Industrial/Strong_Box/Animation/AS_Open',
        ]:

    mod.reg_hotfix(Mod.LEVEL, 'MatchAll',
            obj_name,
            'RateScale',
            global_scale)

mod.newline()

checked_ver = False
for category, obj_names in [
        ('Doors', [
            # find $(find . -name Doors) -name "IO_*.uasset" | sort -i | cut -d. -f2 | grep -v Parent
            '/Game/InteractiveObjects/Doors/Default/400x400/IO_Door_400x400_SlideLeftAndRight',
            '/Game/InteractiveObjects/Doors/_Design/Classes/Global/IO_Daffodil_DamageableVines',
            '/Game/InteractiveObjects/Doors/_Design/Classes/Global/IO_Door_130x250_HubPlayerDoor',
            '/Game/InteractiveObjects/Doors/_Design/Classes/Global/IO_Door_550x550_IntroGate',
            '/Game/InteractiveObjects/Doors/_Design/Classes/Global/IO_Door_550x550_NormalGate',
            '/Game/InteractiveObjects/Doors/_Design/Classes/Global/IO_Door_600x400_SlideUp_Sands',
            '/Game/InteractiveObjects/Doors/_Design/Classes/Global/IO_Door_600x400_SlideUp_Seabed',
            '/Game/InteractiveObjects/Doors/_Design/Classes/Global/IO_Door_CustomSize_Rotate_IronGate_ButtStallion',
            '/Game/InteractiveObjects/Doors/_Design/Classes/Global/IO_Door_CustomSize_Rotate_IronGate_Graveyard',
            '/Game/InteractiveObjects/Doors/_Design/Classes/Global/IO_Door_CustomSize_Rotate_IronGate',
            '/Game/InteractiveObjects/Doors/_Design/Classes/Global/IO_Door_HubDrawbridge',
            '/Game/InteractiveObjects/Doors/_Design/Classes/Global/IO_Door_PyramidBridge',
            '/Game/InteractiveObjects/Doors/_Design/Classes/Global/IO_Door_PyramidIronBear_Lrg',
            '/Game/InteractiveObjects/Doors/_Design/Classes/Global/IO_Door_PyramidIronBear_TankRoom',
            '/Game/InteractiveObjects/Doors/_Design/Classes/Global/IO_Door_PyramidIronBear',
            '/Game/InteractiveObjects/Doors/_Design/Classes/Global/IO_Door_ScalablePortcullis',
            '/Game/InteractiveObjects/Doors/_Design/Classes/Global/IO_Door_SkeepGate',
            '/Game/InteractiveObjects/Doors/Mansion/_Design/IO_Door_CustomSize_Rotate_2Piece_IronGate',
            # No timing parameters
            #'/Game/InteractiveObjects/Doors/Pyramid/_Design/IO_Taint_ExplodingPyramidDoorSimplified',
            # No main TimelineLength
            #'/Game/InteractiveObjects/Doors/Pyramid/_Design/IO_Taint_ExplodingPyramidDoor',
            '/Game/PatchDLC/Indigo1/Common/InteractiveObjects/Doors/IO_Door_Indigo_Portcullis_02',
            # No main TimelineLength
            #'/Game/PatchDLC/Indigo1/Common/InteractiveObjects/Doors/IO_Door_Indigo_Portcullis',
            '/Game/PatchDLC/Indigo1/Common/InteractiveObjects/Doors/IO_Door_SlideUp_ShipDeckGrateBig',
            '/Game/PatchDLC/Indigo1/Common/InteractiveObjects/Doors/IO_Door_SlideUp_ShipDeckGrate',
            ]),
        ('Switches', [
            # find $(find . -name Switches) -name "IO_*.uasset" | sort -i | cut -d. -f2
            '/Game/InteractiveObjects/Switches/_Design/Classes/Global/IO_Daffodil_LichDoorbell',
            '/Game/InteractiveObjects/Switches/_Design/Classes/Global/IO_Switch_Daffodil_SkullSwitch',
            # Can't be serialized
            #'/Game/InteractiveObjects/Switches/_Design/Classes/Global/IO_Switch_SimpleButton',
            '/Game/InteractiveObjects/Switches/Hub_Switch/IO_Switch_Hub',
            '/Game/InteractiveObjects/Switches/Lever/Design/IO_Switch_Industrial_FloorLever_V1_Damageable',
            '/Game/InteractiveObjects/Switches/Lever/Design/IO_Switch_Industrial_FloorLever_V1',
            '/Game/InteractiveObjects/Switches/Lever/Design/IO_TimedSwitch_Industrial_FloorLever_Damageable',
            '/Game/InteractiveObjects/Switches/Lever/Design/IO_TimedSwitch_Industrial_FloorLever',
            ]),
        ('Mission-Specific Machines', [
            ]),
        ('Other Machines', [
            ]),
        ]:

    mod.header(category)

    for base_obj_name in obj_names:

        if type(base_obj_name) == tuple:
            label, level_name, base_obj_name = base_obj_name
        else:
            label = None
            level_name = 'MatchAll'

        if verbose:
            print('Processing {}'.format(base_obj_name))

        last_bit = base_obj_name.split('/')[-1]
        if label:
            mod.comment(label)
        else:
            mod.comment(last_bit)
        last_bit = '{}_C'.format(last_bit)
        full_obj_name = '{}.{}'.format(base_obj_name, last_bit)

        obj = data.get_data(base_obj_name)
        if not obj:
            print('WARNING - Could not be serialized: {}'.format(base_obj_name))
            continue

        if not checked_ver:
            if '_apoc_data_ver' not in obj[0] or obj[0]['_apoc_data_ver'] < min_apoc_jwp_version:
                raise RuntimeError('In order to generate a valid mod, you MUST use Apocalyptech\'s JWP fork which serializes to version {}'.format(min_apoc_jwp_version))
            checked_ver = True

        found_primary = False
        did_main = False
        did_curve = False
        for export in obj:
            if export['_jwp_object_name'] == last_bit:
                found_primary = True
                if 'Timelines' in export:
                    for timeline_idx, timeline_ref in enumerate(export['Timelines']):
                        timeline_exp = timeline_ref['export']
                        if verbose:
                            print(' - Processing timeline {} (export {})'.format(timeline_idx, timeline_exp))
                        if timeline_exp != 0:
                            timeline = obj[timeline_exp-1]

                            # This one's not actually required (and doesn't seem to do anything), but I feel weird *not* specifying it.
                            if 'TimelineLength' in timeline and timeline['TimelineLength'] != 0:
                                did_main = True
                                mod.reg_hotfix(Mod.LEVEL, level_name,
                                        full_obj_name,
                                        f'Timelines.Timelines[{timeline_idx}].Object..TimelineLength',
                                        round(timeline['TimelineLength']/global_scale, 6))

                            # Now process all our various curves
                            for trackname, curve_var in [
                                    ('EventTracks', 'CurveKeys'),
                                    ('FloatTracks', 'CurveFloat'),
                                    # I think VectorTracks is generally not needed; more used for
                                    # rotation+position info, perhaps?
                                    ('VectorTracks', 'CurveVector'),
                                    ]:
                                if trackname in timeline:
                                    if verbose:
                                        print('   - Processing {}'.format(trackname))
                                    for track_idx, track_ref in enumerate(timeline[trackname]):
                                        track_exp = track_ref[curve_var]['export']
                                        if verbose:
                                            print('     - On curve {} (export {})'.format(track_idx, track_exp))
                                        if track_exp != 0:
                                            curve = obj[track_exp-1]
                                            for inner_curve_var in ['FloatCurve', 'FloatCurves']:
                                                if inner_curve_var in curve:
                                                    for key_idx, key in enumerate(curve[inner_curve_var]['Keys']):
                                                        if key['time'] != 0:
                                                            did_curve = True
                                                            mod.reg_hotfix(Mod.LEVEL, level_name,
                                                                    full_obj_name,
                                                                    f'Timelines.Timelines[{timeline_idx}].Object..{trackname}.{trackname}[{track_idx}].{curve_var}.Object..{inner_curve_var}.Keys.Keys[{key_idx}].Time',
                                                                    round(key['time']/global_scale, 6))


        if not found_primary:
            raise RuntimeError('Could not find main export for {}'.format(base_obj_name))

        if not did_main and not did_curve:
            print('NOTICE - No timing parameters found for {}'.format(base_obj_name))
            mod.comment('(no timing parameters found to alter)')
        elif not did_main:
            # This honestly hardly matters; it doesn't look like this attr's really used
            # for much, anyway.
            print('NOTICE - No main TimelineLength found for {}'.format(base_obj_name))
        elif not did_curve:
            print('NOTICE - No curve timings found for {}'.format(base_obj_name))

        mod.newline()

mod.close()
