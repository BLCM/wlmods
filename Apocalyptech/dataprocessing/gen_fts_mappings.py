#!/usr/bin/env python
# vim: set expandtab tabstop=4 shiftwidth=4:

# Copyright 2019-2022 Christopher J. Kucera
# <cj@apocalyptech.com>
# <http://apocalyptech.com/contact.php>
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <https://www.gnu.org/licenses/>.

import re
import sys
from wldata.wldata import WLData
from wlhotfixmod.wlhotfixmod import Mod

# While doing savegame investigation, it looked like the best way to find
# the current map was to start with the fast travel station in a
# last_active_travel_station_for_playthrough string.  We'd want to map
# that back to a level, so this generates that mapping.  (I didn't want
# the savegame stuff to depend on the data library.)
#
# We're including Resurrect Travel and Location Travel stations as well,
# in case those pop up too.

data = WLData()

output_file = 'fts_mappings.py'

# Grab a list of object names
object_names = []
for base_path in [
        '/Game/GameData/FastTravel',
        '/Game/PatchDLC/Indigo1/GameData/FastTravel',
        ]:
    for prefix in ['FTS_', 'RTS_', 'LTS_']:
        object_names.extend(list(data.find(base_path, prefix)))

# Construct the mapping
fts_mapping = {}
for object_name in object_names:
    object_name_full = Mod.get_full_cond(object_name).lower()
    obj = data.get_data(object_name)
    for exp in obj:
        if 'StationMapName' in exp:
            last_map_bit = exp['StationMapName'].split('/')[-1]
            fts_mapping[object_name_full] = last_map_bit
            break

# Now output as a Python dict
with open(output_file, 'w') as df:
    print('', file=df)
    print('# Autogenerated by gen_fts_mappings.py, in Apocalyptech\'s dir in the BLCM wlmods project (in dataprocessing)', file=df)
    print('', file=df)
    print('fts_to_map = {', file=df)
    for k, v in sorted(fts_mapping.items()):
        print("        '{}': '{}',".format(k, v), file=df)
    print('        }', file=df)
    print('', file=df)

print('Generated {}'.format(output_file))
